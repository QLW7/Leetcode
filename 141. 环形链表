// 哈希表
class Solution {
public:
    bool hasCycle(ListNode *head) {
    set<ListNode*> buttle;
    auto ret = buttle.insert(head);
    while(ret.second || head != NULL)
    {
        head = head->next;
        ret = buttle.insert(head);
    }        
    if(head == NULL)
        return false;
    else
        return true;
    }
};

//快慢指针
class Solution {
public:
    bool hasCycle(ListNode *head) {
    if(head == NULL || head->next == NULL)
        return false;
    ListNode* fast = head->next;
    ListNode* slow = head;
    while(fast != slow )
    {
        if(fast == NULL || fast->next == NULL)
            return false;
        slow = slow->next;
        fast = fast->next->next;
    }
    return fast == NULL ? false : true;
    }
};
